[global]
#
# client ---plain--> left-tls:8002   ---tls-----> right-tls:8001   ---plain---.
#                                                                              >  loopback:8000
# client ---plain--> left-plain:8012 ---plain---> right-plain:8011 ---plain---'
#

# A comma separated list the section names of channels to be activated
channels=left-plain, right-plain, left-tls, right-tls, loopback

[left-plain]
# The channel type
# Proxy (server->client) passthrough
type=proxy

# Proxy settings
# The server side section name
proxy.server=left-plain:server
# The client side section name
proxy.client=left-plain:client

[left-plain:server]
host=localhost
port=8012

[left-plain:client]
host=localhost
port=8011

[right-plain]
type=proxy
proxy.server=right-plain:server
proxy.client=right-plain:client

[right-plain:server]
host=
port=8011

[right-plain:client]
host=localhost
port=8000

[left-tls]
# The channel type
# Proxy (server->client) passthrough
type=proxy

# Proxy settings
# The server side section name
proxy.server=left-tls:server
# The client side section name
proxy.client=left-tls:client

[left-tls:server]
# Listen to this host and port
host=localhost
port=8002

[left-tls:client]
# Connect to this host and port
host=localhost
port=8001

# True if connection is TLS
tls=True

# OpenSSL CA path structure for root CA and CRLs
capath=pki-root/capath

# Certificate and key if to be used
certfile=pki-root/store/client1.crt
keyfile=pki-root/store/client1.key

# Can be CERT_NONE, CERT_OPTIONAL, CERT_REQUIRED
verify_mode=CERT_REQUIRED

# A comma separated list of:
# VERIFY_DEFAULT, VERIFY_CRL_CHECK_LEAF, VERIFY_CRL_CHECK_CHAIN, VERIFY_X509_STRICT,
# VERIFY_ALLOW_PROXY_CERTS, VERIFY_X509_TRUSTED_FIRST, VERIFY_X509_PARTIAL_CHAIN
verify_flags=VERIFY_DEFAULT, VERIFY_CRL_CHECK_CHAIN

# For clients expect this hostname as DNS subject alternate name (SAN)
server_hostname=server1

# OpenSSL ciphers statement
ciphers=DHE-RSA-AES256-GCM-SHA384

# Optional sslkeylogfile for wireshark
#sslkeylogfile=/tmp/key.log

[right-tls]
type=proxy
proxy.server=right-tls:server
proxy.client=right-tls:client

[right-tls:server]
host=
port=8001
tls=True
capath=pki-root/capath
certfile=pki-root/store/server1.crt
keyfile=pki-root/store/server1.key
dhfile=pki-root/pki/dh.pem
verify_mode=CERT_REQUIRED
verify_flags=VERIFY_CRL_CHECK_CHAIN
ciphers=DHE-RSA-AES256-GCM-SHA384

# For servers, expect this name in subject alternate name (SAN)
client_name=URI:urn:test:client1

[right-tls:client]
# Connect to this address and port
host=localhost
port=8000

# Bind to this address and port
bind_addr=localhost
bind_port=0

[loopback]
# Loopback type is a server which echos its incoming data
type=loopback
host=localhost
port=8000

# TLS server settings may be specified as well for loopback
